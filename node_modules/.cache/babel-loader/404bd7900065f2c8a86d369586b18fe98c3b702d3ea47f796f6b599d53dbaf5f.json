{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Desktop\\\\Multioptica\\\\multiopticas\\\\src\\\\scripts\\\\login.js\",\n  _s = $RefreshSig$();\n/* este ejemplo es con sweetalert pero lo elimine :v asi que si se retoma hay que volver a instalar sweetalert.\r\nimport { Input } from '@mui/material';\r\nimport swal from '@sweetalert/with-react';\r\n\r\n\r\nexport const ForgetPsswrd = () =>{\r\n    swal({\r\n        buttons: {\r\n          cancel: \"Codigo de recuperacion via email\",\r\n          ok:\"Preguntas secretas\"\r\n        },\r\n        content: (\r\n            <div>\r\n            <h1>¿Has olvidado tu contraseña?</h1>\r\n            <p>Selecciona una opción de recuperación</p>\r\n        </div>\r\n        )\r\n    }).then((a)=>{\r\n        if (a) {\r\n            swal(\"Preguntas\", {\r\n              icon: \"success\",\r\n            });\r\n          } else {\r\n            swal({\r\n                button:{\r\n                    ok:{\r\n                        text:\"Confirmar\",\r\n                    }\r\n                },\r\n                content:\r\n                <div>\r\n                    <h1>Ingrese el PIN proporcionado en su correo electronico</h1>\r\n                    <Input></Input>\r\n                </div>\r\n                \r\n            }\r\n            ).then((token)=>{\r\n                \r\n            })\r\n          }\r\n    })\r\n    \r\n    \r\n}\r\n*/\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nexport default function AlertDialogSlide() {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Slide in alert dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      TransitionComponent: Transition,\n      keepMounted: true,\n      onClose: handleClose,\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-slide-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Disagree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Agree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(AlertDialogSlide, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c3 = AlertDialogSlide;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"AlertDialogSlide\");","map":{"version":3,"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Slide","Transition","forwardRef","props","ref","AlertDialogSlide","open","setOpen","useState","handleClickOpen","handleClose"],"sources":["C:/Users/usuario/Desktop/Multioptica/multiopticas/src/scripts/login.js"],"sourcesContent":["/* este ejemplo es con sweetalert pero lo elimine :v asi que si se retoma hay que volver a instalar sweetalert.\r\nimport { Input } from '@mui/material';\r\nimport swal from '@sweetalert/with-react';\r\n\r\n\r\nexport const ForgetPsswrd = () =>{\r\n    swal({\r\n        buttons: {\r\n          cancel: \"Codigo de recuperacion via email\",\r\n          ok:\"Preguntas secretas\"\r\n        },\r\n        content: (\r\n            <div>\r\n            <h1>¿Has olvidado tu contraseña?</h1>\r\n            <p>Selecciona una opción de recuperación</p>\r\n        </div>\r\n        )\r\n    }).then((a)=>{\r\n        if (a) {\r\n            swal(\"Preguntas\", {\r\n              icon: \"success\",\r\n            });\r\n          } else {\r\n            swal({\r\n                button:{\r\n                    ok:{\r\n                        text:\"Confirmar\",\r\n                    }\r\n                },\r\n                content:\r\n                <div>\r\n                    <h1>Ingrese el PIN proporcionado en su correo electronico</h1>\r\n                    <Input></Input>\r\n                </div>\r\n                \r\n            }\r\n            ).then((token)=>{\r\n                \r\n            })\r\n          }\r\n    })\r\n    \r\n    \r\n}\r\n*/\r\nimport * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending anonymous\r\n            location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Disagree</Button>\r\n          <Button onClick={handleClose}>Agree</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,qBAAqB;AAAC;AAExC,MAAMC,UAAU,gBAAGR,KAAK,CAACS,UAAU,MAAC,SAASD,UAAU,CAACE,KAAK,EAAEC,GAAG,EAAE;EAClE,oBAAO,QAAC,KAAK;IAAC,SAAS,EAAC,IAAI;IAAC,GAAG,EAAEA,GAAI;IAAA,GAAKD;EAAK;IAAA;IAAA;IAAA;EAAA,QAAI;AACtD,CAAC,CAAC;AAAC,MAFGF,UAAU;AAIhB,eAAe,SAASI,gBAAgB,GAAG;EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,KAAK,CAACe,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMC,eAAe,GAAG,MAAM;IAC5BF,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMG,WAAW,GAAG,MAAM;IACxBH,OAAO,CAAC,KAAK,CAAC;EAChB,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,MAAM;MAAC,OAAO,EAAC,UAAU;MAAC,OAAO,EAAEE,eAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE3C,eACT,QAAC,MAAM;MACL,IAAI,EAAEH,IAAK;MACX,mBAAmB,EAAEL,UAAW;MAChC,WAAW;MACX,OAAO,EAAES,WAAY;MACrB,oBAAiB,gCAAgC;MAAA,wBAEjD,QAAC,WAAW;QAAA,UAAE;MAAgC;QAAA;QAAA;QAAA;MAAA,QAAe,eAC7D,QAAC,aAAa;QAAA,uBACZ,QAAC,iBAAiB;UAAC,EAAE,EAAC,gCAAgC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAGlC;QAAA;QAAA;QAAA;MAAA,QACN,eAChB,QAAC,aAAa;QAAA,wBACZ,QAAC,MAAM;UAAC,OAAO,EAAEA,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eAC/C,QAAC,MAAM;UAAC,OAAO,EAAEA,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9B;IAAA;MAAA;MAAA;MAAA;IAAA,QACT;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GArCuBL,gBAAgB;AAAA,MAAhBA,gBAAgB;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}