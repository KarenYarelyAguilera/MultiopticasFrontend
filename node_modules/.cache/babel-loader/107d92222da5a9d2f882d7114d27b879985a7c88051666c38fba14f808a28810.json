{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\usuario\\\\Desktop\\\\Multioptica\\\\multiopticas\\\\src\\\\scripts\\\\login.js\";\nimport { Input } from \"@mui/material\";\nimport swal from \"@sweetalert/with-react\";\n\n//este ejemplo es con sweetalert pero lo elimine :v asi que si se retoma hay que volver a instalar sweetalert.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ForgetPsswrd = () => {\n  swal({\n    buttons: {\n      codigo: \"Codigo de recuperacion via email\",\n      preguntas: \"Preguntas secretas\",\n      cancel: \"cancel\"\n    },\n    content: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\xBFHas olvidado tu contrase\\xF1a?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selecciona una opci\\xF3n de recuperaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }).then(a => {\n    switch (a) {\n      case \"codigo\":\n        swal( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Codigo de recuperacion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ingrese su correo para recibir un codigo de verificacion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"correo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)).then(correo => {\n          correo = document.getElementById(\"correo\").value;\n          alert(correo);\n        }).then(() => {\n          swal( /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Ingrese el codigo que se le proporcion\\xF3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"codigoVerificacion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)).then(codigo => {\n            codigo = document.getElementById(\"codigoVerificacion\").value;\n            alert(codigo);\n          }).then(() => RestablecerContrasenia());\n        });\n        break;\n      case \"preguntas\":\n        swal(\"preguntas\");\n        break;\n      case \"cancel\":\n        swal(\"cancel\");\n        break;\n      default:\n        break;\n    }\n  });\n};\n_c = ForgetPsswrd;\nconst RestablecerContrasenia = () => {\n  swal( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restablezca su contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Para mayor seguridad su contrase\\xF1a debe contener numeros y caracteres especiales\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nueva contrase\\xF1a: \", /*#__PURE__*/_jsxDEV(Input, {\n        id: \"newPasswrd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Confirme su contrase\\xF1a: \", /*#__PURE__*/_jsxDEV(Input, {\n        id: \"newPasswrdConfirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this)).then(() => {\n    let newPssword, newPsswordConfirm;\n    newPssword = document.getElementById('newPasswrd').value;\n    newPsswordConfirm = document.getElementById('newPasswrdConfirm').value;\n    do {\n      alert(\"Las contraseñas deben coincidir\");\n    } while (newPssword != newPsswordConfirm);\n    alert(\"Nueva contraseña: \" + newPssword + \"\\nConfirmacion: \" + newPsswordConfirm);\n  });\n};\n_c2 = RestablecerContrasenia;\nvar _c, _c2;\n$RefreshReg$(_c, \"ForgetPsswrd\");\n$RefreshReg$(_c2, \"RestablecerContrasenia\");","map":{"version":3,"names":["Input","swal","ForgetPsswrd","buttons","codigo","preguntas","cancel","content","then","a","correo","document","getElementById","value","alert","RestablecerContrasenia","newPssword","newPsswordConfirm"],"sources":["C:/Users/usuario/Desktop/Multioptica/multiopticas/src/scripts/login.js"],"sourcesContent":["import { Input } from \"@mui/material\";\r\nimport swal from \"@sweetalert/with-react\";\r\n\r\n//este ejemplo es con sweetalert pero lo elimine :v asi que si se retoma hay que volver a instalar sweetalert.\r\n\r\nexport const ForgetPsswrd = () => {\r\n  swal({\r\n    buttons: {\r\n      codigo: \"Codigo de recuperacion via email\",\r\n      preguntas: \"Preguntas secretas\",\r\n      cancel: \"cancel\",\r\n    },\r\n    content: (\r\n      <div>\r\n        <h1>¿Has olvidado tu contraseña?</h1>\r\n        <p>Selecciona una opción de recuperación</p>\r\n      </div>\r\n    ),\r\n  }).then((a) => {\r\n    switch (a) {\r\n      case \"codigo\":\r\n        swal(\r\n          <div>\r\n            <h1>Codigo de recuperacion</h1>\r\n            <p>Ingrese su correo para recibir un codigo de verificacion</p>\r\n            <Input id=\"correo\"></Input>\r\n          </div>\r\n        )\r\n          .then((correo) => {\r\n            correo = document.getElementById(\"correo\").value;\r\n            alert(correo);\r\n          })\r\n          .then(() => {\r\n            swal(\r\n              <div>\r\n                <h1>Ingrese el codigo que se le proporcionó</h1>\r\n                <Input id=\"codigoVerificacion\"></Input>\r\n              </div>\r\n            ).then((codigo) => {\r\n              codigo = document.getElementById(\"codigoVerificacion\").value;\r\n              alert(codigo);\r\n            }).then(()=>RestablecerContrasenia())\r\n          })\r\n        break;\r\n      case \"preguntas\":\r\n        swal(\"preguntas\");\r\n        break;\r\n      case \"cancel\":\r\n        swal(\"cancel\");\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nconst RestablecerContrasenia = () =>{\r\n  swal(\r\n    <div>\r\n      <h1>Restablezca su contraseña</h1>\r\n      <p>Para mayor seguridad su contraseña debe contener numeros y caracteres especiales</p>\r\n      <p>Nueva contraseña: <Input id=\"newPasswrd\"></Input></p>\r\n      <p>Confirme su contraseña: <Input id=\"newPasswrdConfirm\"></Input></p>\r\n    </div>\r\n  ).then(()=>{\r\n    let newPssword,newPsswordConfirm\r\n    newPssword=document.getElementById('newPasswrd').value\r\n    newPsswordConfirm=document.getElementById('newPasswrdConfirm').value\r\n    do {\r\n      alert(\"Las contraseñas deben coincidir\")\r\n    } while (newPssword != newPsswordConfirm);\r\n    alert(\"Nueva contraseña: \"+newPssword+\"\\nConfirmacion: \"+newPsswordConfirm)\r\n  })\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}